<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ImageResizer.Plugins.S3Reader2</name>
    </assembly>
    <members>
        <member name="T:ImageResizer.Plugins.S3Reader2.S3PathEventArgs">
            <summary>
            Class to allow modifying the bucket and key request path
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.S3Reader2.S3PathEventArgs.#ctor(System.String)">
            <summary>
            Create a new instance of S3PathEventArgs for modifying the bucket and key of incoming requests
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:ImageResizer.Plugins.S3Reader2.S3PathEventArgs.Path">
            <summary>
            Path contains the bucket and key in the form "bucket/key".
            Where key may contain additional forward slashes.
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.S3Reader2.S3PathEventArgs.AssertBucketMatches(System.String[])">
            <summary>
            Stops the request if it doesn't match one of the allowed buckets.
            Amazon S3 is case-sensitive. Thus, comparisons are case sensitive as well. To minimize headache, a different exception is thrown when only case differs.
            </summary>
            <param name="buckets"></param>
        </member>
        <member name="M:ImageResizer.Plugins.S3Reader2.S3PathEventArgs.ThrowException">
            <summary>
            Throws an HTTP 403 Not Authorized exception. Call this if an invalid bucket request comes through.
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.S3Reader2.S3PathEventArgs.ThrowInvalidCaseException">
            <summary>
            Like ThrowException, but hints that the bucket casing is wrong.
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.S3Reader2.S3PathEventArgs.PrefixBucket(System.String)">
            <summary>
            Prefixes the specified bucket to the requested path.
            </summary>
            <param name="bucket"></param>
        </member>
        <member name="P:ImageResizer.Plugins.S3Reader2.S3PathEventArgs.Bucket">
            <summary>
            Parses the bucket from Path
            </summary>
            <returns></returns>
        </member>
        <member name="P:ImageResizer.Plugins.S3Reader2.S3PathEventArgs.Key">
            <summary>
            Parses the key from Path
            </summary>
            <returns></returns>
        </member>
        <member name="P:ImageResizer.Plugins.S3Reader2.S3Reader2.UseHttps">
            <summary>
            If true, communications with S3 will happen over HTTPS.
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.S3Reader2.S3Reader2.RedactFrom(ImageResizer.Configuration.Xml.Node)">
            <summary>
            Removes sensitive S3 access keys from the given XML configuration node.
            </summary>
            <param name="resizer"></param>
            <returns></returns>
        </member>
        <member name="P:ImageResizer.Plugins.S3Reader2.S3Reader2.S3Client">
            <summary>
            Configure AWS access keys
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.S3Reader2.S3Reader2.Region">
            <summary>
            Get or set the AWS region by system name (like us-east-1)
            </summary>
        </member>
        <member name="E:ImageResizer.Plugins.S3Reader2.S3Reader2.PreS3RequestFilter">
            <summary>
            Important! You should handle this event and throw an exception if a bucket that you do not own is requested. Otherwise other people's buckets could be accessed using your server.
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.S3Reader2.S3Reader2.FilterPath(System.String)">
            <summary>
            Executes the PreS3RequestFilter event and returns the result.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
    </members>
</doc>
